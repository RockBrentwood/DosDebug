
;; --- This file was generated by MakeTabs.exe.

;; --- Operand type lists.
;; --- They were read from file Op.key.

oplists label byte
	opl	;; void - for instructions without operands
	opl _Ax, _Ix	;; idx=01, ofs=00dh
	opl _Ex, _Ix	;; idx=02, ofs=010h
	opl _Ev, _Ds	;; idx=03, ofs=013h
	opl _Ex, _Rx	;; idx=04, ofs=016h
	opl _Rx, _Ex	;; idx=05, ofs=019h
	opl _Ew, _Rw	;; idx=06, ofs=01ch
	opl _Rv, _Mv	;; idx=07, ofs=01fh
	opl _Rv, _Ev	;; idx=08, ofs=022h
	opl _rd	;; idx=09, ofs=025h
	opl _Ev, _Rv	;; idx=10, ofs=027h
	opl _Ev, _Db	;; idx=11, ofs=02ah
	opl _Jv	;; idx=12, ofs=02dh
	opl _Af	;; idx=13, ofs=02fh
	opl _Mf	;; idx=14, ofs=031h
	opl _Q	;; idx=15, ofs=033h
	opl _Ex	;; idx=16, ofs=035h
	opl _rv	;; idx=17, ofs=037h
	opl _Iw, _Db	;; idx=18, ofs=039h
	opl _MF	;; idx=19, ofs=03ch
	opl _MD	;; idx=20, ofs=03eh
	opl _ST, _STi	;; idx=21, ofs=040h
	opl _STi, _ST	;; idx=22, ofs=043h
	opl _ST1, _STi, _ST	;; idx=23, ofs=046h
	opl _Md	;; idx=24, ofs=04ah
	opl _Mw	;; idx=25, ofs=04ch
	opl _MLD	;; idx=26, ofs=04eh
	opl _STi	;; idx=27, ofs=050h
	opl _ST1, _STi	;; idx=28, ofs=052h
	opl _Mx	;; idx=29, ofs=055h
	opl _Aw	;; idx=30, ofs=057h
	opl _Rv, _Ev, _Ds	;; idx=31, ofs=059h
	opl _Xv, _Rv, _Ds	;; idx=32, ofs=05dh
	opl _Rv, _Ev, _Iv	;; idx=33, ofs=061h
	opl _Xv, _Rv, _Iv	;; idx=34, ofs=065h
	opl _Ax, _Db	;; idx=35, ofs=069h
	opl _Ax, _DX	;; idx=36, ofs=06ch
	opl _3	;; idx=37, ofs=06fh
	opl _Db	;; idx=38, ofs=071h
	opl _Jb	;; idx=39, ofs=073h
	opl _Ev	;; idx=40, ofs=075h
	opl _Ew	;; idx=41, ofs=077h
	opl _Ev, _Rs	;; idx=42, ofs=079h
	opl _Rs, _Ev	;; idx=43, ofs=07ch
	opl _Ax, _Ox	;; idx=44, ofs=07fh
	opl _Ox, _Ax	;; idx=45, ofs=082h
	opl _rb, _Ib	;; idx=46, ofs=085h
	opl _rv, _Iv	;; idx=47, ofs=088h
	opl _Rv, _N, _Eb	;; idx=48, ofs=08bh
	opl _Rv, _N, _Ew	;; idx=49, ofs=08fh
	opl _Db, _Ax	;; idx=50, ofs=093h
	opl _DX, _Ax	;; idx=51, ofs=096h
	opl _Mv	;; idx=52, ofs=099h
	opl _Iv	;; idx=53, ofs=09bh
	opl _N, _Ds	;; idx=54, ofs=09dh
	opl _Ex, _1	;; idx=55, ofs=0a0h
	opl _Ex, _CL	;; idx=56, ofs=0a3h
	opl _Ex, _Db	;; idx=57, ofs=0a6h
	opl _Iw	;; idx=58, ofs=0a9h
	opl _Eb	;; idx=59, ofs=0abh
	opl _Ev, _Rv, _Db	;; idx=60, ofs=0adh
	opl _Ev, _Rv, _CL	;; idx=61, ofs=0b1h
	opl _Av, _rv	;; idx=62, ofs=0b5h
	opl _rv, _Av	;; idx=63, ofs=0b8h
	opl _ES	;; idx=64, ofs=0bbh
	opl _CS	;; idx=65, ofs=0bdh
	opl _SS	;; idx=66, ofs=0bfh
	opl _DS	;; idx=67, ofs=0c1h
	opl _FS	;; idx=68, ofs=0c3h
	opl _GS	;; idx=69, ofs=0c5h
	opl _Xd, _CRx	;; idx=70, ofs=0c7h
	opl _CRx, _Xd	;; idx=71, ofs=0cah
	opl _Xd, _DRx	;; idx=72, ofs=0cdh
	opl _DRx, _Xd	;; idx=73, ofs=0d0h
	opl _Xd, _TRx	;; idx=74, ofs=0d3h
	opl _TRx, _Xd	;; idx=75, ofs=0d6h
	opl _MMx, _Ed	;; idx=76, ofs=0d9h
	opl _Ed, _MMx	;; idx=77, ofs=0dch
	opl _MMx, _Eq	;; idx=78, ofs=0dfh
	opl _Eq, _MMx	;; idx=79, ofs=0e2h

ASMMOD	EQU opidx

;; --- Assembler: data on groups.
;; --- If HiByte == 01, it's a "0f-prefix" group.

agroups label word
	dw 083h	;; 0
	dw 080h	;; 1
	dw 1bah	;; 2
	dw 0ffh	;; 3
	dw 1c7h	;; 4
	dw 0feh	;; 5
	dw 0f6h	;; 6
	dw 101h	;; 7
	dw 100h	;; 8
	dw 0c6h	;; 9
	dw 08fh	;; 10
	dw 0d0h	;; 11
	dw 0d2h	;; 12
	dw 0c0h	;; 13

;; --- List of assembler mnemonics and data.
;; --- variant's 1. argument (=a):
;; ---   if a < 0x100: one byte opcode.
;; ---   if a >= 0x100 && a < 0x200: two byte "0f"-opcode.
;; ---   if a >= 0x200 && a < 0x240: fp instruction.
;; ---   if a >= 0x240: refers to agroups [macro AGRP() is used].
;; --- variant's 2. argument is index into array opindex.

mnlist label byte
	mne AAA	;; ofs=000h
	 variant 037h, 0
	 endvariant
	mne AAD, ASM_AAX	;; ofs=003h
	 variant 0d5h, 38
	 endvariant
	mne AAM, ASM_AAX	;; ofs=007h
	 variant 0d4h, 38
	 endvariant
	mne AAS	;; ofs=00bh
	 variant 03fh, 0
	 endvariant
	mne ADC	;; ofs=00eh
	 variant AGRP(0,2), 3, ASM_LOCKABLE
	 variant 014h, 1
	 variant AGRP(1,2), 2, ASM_LOCKABLE
	 variant 010h, 4, ASM_LOCKABLE
	 variant 012h, 5
	 endvariant
	mne ADD	;; ofs=01ch
	 variant AGRP(0,0), 3, ASM_LOCKABLE
	 variant 004h, 1
	 variant AGRP(1,0), 2, ASM_LOCKABLE
	 variant 000h, 4, ASM_LOCKABLE
	 variant 002h, 5
	 endvariant
	mne AND	;; ofs=02ah
	 variant AGRP(0,4), 3, ASM_LOCKABLE
	 variant 024h, 1
	 variant AGRP(1,4), 2, ASM_LOCKABLE
	 variant 020h, 4, ASM_LOCKABLE
	 variant 022h, 5
	 endvariant
	mne ARPL	;; ofs=038h
	 variant 063h, 6, , ASM_MACH2
	 endvariant
	mne BOUND	;; ofs=03ch
	 variant 062h, 7, , ASM_MACH1
	 endvariant
	mne BSF	;; ofs=040h
	 variant 1bch, 8, , ASM_MACH3
	 endvariant
	mne BSR	;; ofs=044h
	 variant 1bdh, 8, , ASM_MACH3
	 endvariant
	mne BSWAP, ASM_D32	;; ofs=048h
	 variant 1c8h, 9, , ASM_MACH4
	 endvariant
	mne BT	;; ofs=04dh
	 variant 1a3h, 10, , ASM_MACH3
	 variant AGRP(2,4), 11, , ASM_MACH3
	 endvariant
	mne BTC	;; ofs=054h
	 variant 1bbh, 10, ASM_LOCKABLE, ASM_MACH3
	 variant AGRP(2,7), 11, ASM_LOCKABLE, ASM_MACH3
	 endvariant
	mne BTR	;; ofs=05dh
	 variant 1b3h, 10, ASM_LOCKABLE, ASM_MACH3
	 variant AGRP(2,6), 11, ASM_LOCKABLE, ASM_MACH3
	 endvariant
	mne BTS	;; ofs=066h
	 variant 1abh, 10, ASM_LOCKABLE, ASM_MACH3
	 variant AGRP(2,5), 11, ASM_LOCKABLE, ASM_MACH3
	 endvariant
	mne CALL	;; ofs=06fh
	 variant 0e8h, 12
	 variant AGRP(3,2), 40
	 variant AGRP(3,3), 14
	 variant 09ah, 13
	 endvariant
	mne CBW, ASM_D16	;; ofs=078h
	mne CWDE, ASM_D32	;; ofs=079h
	 variant 098h, 0
	 endvariant
	mne CLC	;; ofs=07dh
	 variant 0f8h, 0
	 endvariant
	mne CLD	;; ofs=080h
	 variant 0fch, 0
	 endvariant
	mne CLI	;; ofs=083h
	 variant 0fah, 0
	 endvariant
	mne CLTS	;; ofs=086h
	 variant 106h, 0, , ASM_MACH2
	 endvariant
	mne CMC	;; ofs=08ah
	 variant 0f5h, 0
	 endvariant
	mne CMOVA	;; ofs=08dh
	 variant 147h, 8, , ASM_MACH6
	 endvariant
	mne CMOVAE	;; ofs=091h
	 variant 143h, 8, , ASM_MACH6
	 endvariant
	mne CMOVB	;; ofs=095h
	 variant 142h, 8, , ASM_MACH6
	 endvariant
	mne CMOVBE	;; ofs=099h
	 variant 146h, 8, , ASM_MACH6
	 endvariant
	mne CMOVC	;; ofs=09dh
	 variant 142h, 8, , ASM_MACH6
	 endvariant
	mne CMOVE	;; ofs=0a1h
	 variant 144h, 8, , ASM_MACH6
	 endvariant
	mne CMOVG	;; ofs=0a5h
	 variant 14fh, 8, , ASM_MACH6
	 endvariant
	mne CMOVGE	;; ofs=0a9h
	 variant 14dh, 8, , ASM_MACH6
	 endvariant
	mne CMOVL	;; ofs=0adh
	 variant 14ch, 8, , ASM_MACH6
	 endvariant
	mne CMOVLE	;; ofs=0b1h
	 variant 14eh, 8, , ASM_MACH6
	 endvariant
	mne CMOVNA	;; ofs=0b5h
	 variant 146h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNAE	;; ofs=0b9h
	 variant 142h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNB	;; ofs=0bdh
	 variant 143h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNBE	;; ofs=0c1h
	 variant 147h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNC	;; ofs=0c5h
	 variant 143h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNE	;; ofs=0c9h
	 variant 145h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNG	;; ofs=0cdh
	 variant 14eh, 8, , ASM_MACH6
	 endvariant
	mne CMOVNGE	;; ofs=0d1h
	 variant 14ch, 8, , ASM_MACH6
	 endvariant
	mne CMOVNL	;; ofs=0d5h
	 variant 14dh, 8, , ASM_MACH6
	 endvariant
	mne CMOVNLE	;; ofs=0d9h
	 variant 14fh, 8, , ASM_MACH6
	 endvariant
	mne CMOVNO	;; ofs=0ddh
	 variant 141h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNP	;; ofs=0e1h
	 variant 14bh, 8, , ASM_MACH6
	 endvariant
	mne CMOVNS	;; ofs=0e5h
	 variant 149h, 8, , ASM_MACH6
	 endvariant
	mne CMOVNZ	;; ofs=0e9h
	 variant 145h, 8, , ASM_MACH6
	 endvariant
	mne CMOVO	;; ofs=0edh
	 variant 140h, 8, , ASM_MACH6
	 endvariant
	mne CMOVP	;; ofs=0f1h
	 variant 14ah, 8, , ASM_MACH6
	 endvariant
	mne CMOVPE	;; ofs=0f5h
	 variant 14ah, 8, , ASM_MACH6
	 endvariant
	mne CMOVPO	;; ofs=0f9h
	 variant 14bh, 8, , ASM_MACH6
	 endvariant
	mne CMOVS	;; ofs=0fdh
	 variant 148h, 8, , ASM_MACH6
	 endvariant
	mne CMOVZ	;; ofs=101h
	 variant 144h, 8, , ASM_MACH6
	 endvariant
	mne CMP	;; ofs=105h
	 variant AGRP(0,7), 3
	 variant 03ch, 1
	 variant AGRP(1,7), 2
	 variant 038h, 4
	 variant 03ah, 5
	 endvariant
	mne CMPSB	;; ofs=110h
	 variant 0a6h, 0
	 endvariant
	mne CMPSW, ASM_D16	;; ofs=113h
	mne CMPSD, ASM_D32	;; ofs=114h
	 variant 0a7h, 0
	 endvariant
	mne CMPXCHG	;; ofs=118h
	 variant 1b0h, 4, ASM_LOCKABLE, ASM_MACH4
	 endvariant
	mne CMPXCHG8B	;; ofs=11dh
	 variant AGRP(4,1), 15, , ASM_MACH5
	 endvariant
	mne CPUID	;; ofs=121h
	 variant 1a2h, 0, , ASM_MACH5
	 endvariant
	mne CWD, ASM_D16	;; ofs=125h
	mne CDQ, ASM_D32	;; ofs=126h
	 variant 099h, 0
	 endvariant
	mne DAA	;; ofs=12ah
	 variant 027h, 0
	 endvariant
	mne DAS	;; ofs=12dh
	 variant 02fh, 0
	 endvariant
	mne DB, ASM_DB	;; ofs=130h
	mne DD, ASM_DD	;; ofs=132h
	mne DEC	;; ofs=134h
	 variant 048h, 17
	 variant AGRP(5,1), 16, ASM_LOCKABLE
	 endvariant
	mne DIV	;; ofs=13ah
	 variant AGRP(6,6), 16
	 endvariant
	mne DW, ASM_DW	;; ofs=13dh
	mne EMMS	;; ofs=13fh
	 variant 177h, 0, , ASM_MACH5
	 endvariant
	mne ENTER	;; ofs=143h
	 variant 0c8h, 18, , ASM_MACH1
	 endvariant
	mne F2XM1	;; ofs=147h
	 fpvariant 0d9h, 0, 0f0h
	 endvariant
	mne FABS	;; ofs=14bh
	 fpvariant 0d9h, 0, 0e1h
	 endvariant
	mne FADD	;; ofs=14fh
	 variant 200h, 19
	 variant 204h, 20
	 fpvariant 0d8h, 21, 0c0h
	 fpvariant 0dch, 22, 0c0h
	 endvariant
	mne FADDP	;; ofs=15ah
	 fpvariant 0deh, 23, 0c0h
	 fpvariant 0deh, 0, 0c1h
	 endvariant
	mne FIADD	;; ofs=161h
	 variant 202h, 24
	 variant 206h, 25
	 endvariant
	mne FBLD	;; ofs=166h
	 variant 227h, 26
	 endvariant
	mne FBSTP	;; ofs=169h
	 variant 237h, 26
	 endvariant
	mne FCHS	;; ofs=16ch
	 fpvariant 0d9h, 0, 0e0h
	 endvariant
	mne FCLEX, ASM_WAIT	;; ofs=170h
	mne FNCLEX	;; ofs=171h
	 fpvariant 0dbh, 0, 0e2h
	 endvariant
	mne FCMOVA	;; ofs=175h
	 fpvariant 0dbh, 21, 0d0h, , ASM_MACH6
	 endvariant
	mne FCMOVAE	;; ofs=17ah
	 fpvariant 0dbh, 21, 0c0h, , ASM_MACH6
	 endvariant
	mne FCMOVB	;; ofs=17fh
	 fpvariant 0dah, 21, 0c0h, , ASM_MACH6
	 endvariant
	mne FCMOVBE	;; ofs=184h
	 fpvariant 0dah, 21, 0d0h, , ASM_MACH6
	 endvariant
	mne FCMOVE	;; ofs=189h
	 fpvariant 0dah, 21, 0c8h, , ASM_MACH6
	 endvariant
	mne FCMOVNA	;; ofs=18eh
	 fpvariant 0dah, 21, 0d0h, , ASM_MACH6
	 endvariant
	mne FCMOVNAE	;; ofs=193h
	 fpvariant 0dah, 21, 0c0h, , ASM_MACH6
	 endvariant
	mne FCMOVNB	;; ofs=198h
	 fpvariant 0dbh, 21, 0c0h, , ASM_MACH6
	 endvariant
	mne FCMOVNBE	;; ofs=19dh
	 fpvariant 0dbh, 21, 0d0h, , ASM_MACH6
	 endvariant
	mne FCMOVNE	;; ofs=1a2h
	 fpvariant 0dbh, 21, 0c8h, , ASM_MACH6
	 endvariant
	mne FCMOVNU	;; ofs=1a7h
	 fpvariant 0dbh, 21, 0d8h, , ASM_MACH6
	 endvariant
	mne FCMOVNZ	;; ofs=1ach
	 fpvariant 0dbh, 21, 0c8h, , ASM_MACH6
	 endvariant
	mne FCMOVU	;; ofs=1b1h
	 fpvariant 0dah, 21, 0d8h, , ASM_MACH6
	 endvariant
	mne FCMOVZ	;; ofs=1b6h
	 fpvariant 0dah, 21, 0c8h, , ASM_MACH6
	 endvariant
	mne FCOM	;; ofs=1bbh
	 variant 210h, 19
	 variant 214h, 20
	 fpvariant 0d8h, 28, 0d0h
	 fpvariant 0d8h, 0, 0d1h
	 endvariant
	mne FCOMI	;; ofs=1c6h
	 fpvariant 0dbh, 28, 0f0h, , ASM_MACH6
	 fpvariant 0dbh, 0, 0f1h, , ASM_MACH6
	 endvariant
	mne FCOMIP	;; ofs=1cfh
	 fpvariant 0dfh, 28, 0f0h, , ASM_MACH6
	 fpvariant 0dfh, 0, 0f1h, , ASM_MACH6
	 endvariant
	mne FCOMP	;; ofs=1d8h
	 variant 218h, 19
	 variant 21ch, 20
	 fpvariant 0d8h, 28, 0d8h
	 fpvariant 0d8h, 0, 0d9h
	 endvariant
	mne FCOMPP	;; ofs=1e3h
	 fpvariant 0deh, 0, 0d9h
	 endvariant
	mne FCOS	;; ofs=1e7h
	 fpvariant 0d9h, 0, 0ffh, , ASM_MACH3
	 endvariant
	mne FDECSTP	;; ofs=1ech
	 fpvariant 0d9h, 0, 0f6h
	 endvariant
	mne FDISI, ASM_WAIT	;; ofs=1f0h
	mne FNDISI	;; ofs=1f1h
	 fpvariant 0dbh, 0, 0e1h
	 endvariant
	mne FDIV	;; ofs=1f5h
	 variant 230h, 19
	 variant 234h, 20
	 fpvariant 0d8h, 21, 0f0h
	 fpvariant 0dch, 22, 0f8h
	 endvariant
	mne FDIVP	;; ofs=200h
	 fpvariant 0deh, 23, 0f8h
	 fpvariant 0deh, 0, 0f9h
	 endvariant
	mne FIDIV	;; ofs=207h
	 variant 232h, 24
	 variant 236h, 25
	 endvariant
	mne FDIVR	;; ofs=20ch
	 variant 238h, 19
	 variant 23ch, 20
	 fpvariant 0d8h, 21, 0f8h
	 fpvariant 0dch, 22, 0f0h
	 endvariant
	mne FDIVRP	;; ofs=217h
	 fpvariant 0deh, 23, 0f0h
	 fpvariant 0deh, 0, 0f1h
	 endvariant
	mne FIDIVR	;; ofs=21eh
	 variant 23ah, 24
	 variant 23eh, 25
	 endvariant
	mne FENI, ASM_WAIT	;; ofs=223h
	mne FNENI	;; ofs=224h
	 fpvariant 0dbh, 0, 0e0h
	 endvariant
	mne FFREE	;; ofs=228h
	 fpvariant 0ddh, 27, 0c0h
	 endvariant
	mne FICOM	;; ofs=22ch
	 variant 212h, 24
	 variant 216h, 25
	 endvariant
	mne FICOMP	;; ofs=231h
	 variant 21ah, 24
	 variant 21eh, 25
	 endvariant
	mne FILD	;; ofs=236h
	 variant 203h, 24
	 variant 207h, 25
	 variant 22fh, 15
	 endvariant
	mne FINCSTP	;; ofs=23dh
	 fpvariant 0d9h, 0, 0f7h
	 endvariant
	mne FINIT, ASM_WAIT	;; ofs=241h
	mne FNINIT	;; ofs=242h
	 fpvariant 0dbh, 0, 0e3h
	 endvariant
	mne FIST	;; ofs=246h
	 variant 213h, 24
	 variant 217h, 25
	 endvariant
	mne FISTP	;; ofs=24bh
	 variant 21bh, 24
	 variant 21fh, 25
	 variant 23fh, 15
	 endvariant
	mne FLD	;; ofs=252h
	 variant 201h, 19
	 variant 205h, 20
	 variant 22bh, 26
	 fpvariant 0d9h, 27, 0c0h
	 endvariant
	mne FLD1	;; ofs=25ch
	 fpvariant 0d9h, 0, 0e8h
	 endvariant
	mne FLDL2T	;; ofs=260h
	 fpvariant 0d9h, 0, 0e9h
	 endvariant
	mne FLDL2E	;; ofs=264h
	 fpvariant 0d9h, 0, 0eah
	 endvariant
	mne FLDPI	;; ofs=268h
	 fpvariant 0d9h, 0, 0ebh
	 endvariant
	mne FLDLG2	;; ofs=26ch
	 fpvariant 0d9h, 0, 0ech
	 endvariant
	mne FLDLN2	;; ofs=270h
	 fpvariant 0d9h, 0, 0edh
	 endvariant
	mne FLDZ	;; ofs=274h
	 fpvariant 0d9h, 0, 0eeh
	 endvariant
	mne FLDCW, ASM_WAIT	;; ofs=278h
	mne FNLDCW	;; ofs=279h
	 variant 229h, 25
	 endvariant
	mne FLDENV	;; ofs=27ch
	 variant 221h, 29
	 endvariant
	mne FLDENVW, ASM_D16	;; ofs=27fh
	mne FLDENVD, ASM_D32	;; ofs=280h
	 variant 221h, 29
	 endvariant
	mne FMUL	;; ofs=284h
	 variant 208h, 19
	 variant 20ch, 20
	 fpvariant 0d8h, 21, 0c8h
	 fpvariant 0dch, 22, 0c8h
	 endvariant
	mne FMULP	;; ofs=28fh
	 fpvariant 0deh, 23, 0c8h
	 fpvariant 0deh, 0, 0c9h
	 endvariant
	mne FIMUL	;; ofs=296h
	 variant 20ah, 24
	 variant 20eh, 25
	 endvariant
	mne FNOP	;; ofs=29bh
	 fpvariant 0d9h, 0, 0d0h
	 endvariant
	mne FPATAN	;; ofs=29fh
	 fpvariant 0d9h, 0, 0f3h
	 endvariant
	mne FPREM	;; ofs=2a3h
	 fpvariant 0d9h, 0, 0f8h
	 endvariant
	mne FPREM1	;; ofs=2a7h
	 fpvariant 0d9h, 0, 0f5h, , ASM_MACH3
	 endvariant
	mne FPTAN	;; ofs=2ach
	 fpvariant 0d9h, 0, 0f2h
	 endvariant
	mne FRNDINT	;; ofs=2b0h
	 fpvariant 0d9h, 0, 0fch
	 endvariant
	mne FRSTOR	;; ofs=2b4h
	 variant 225h, 29
	 endvariant
	mne FRSTORW, ASM_D16	;; ofs=2b7h
	mne FRSTORD, ASM_D32	;; ofs=2b8h
	 variant 225h, 29
	 endvariant
	mne FSAVE, ASM_WAIT	;; ofs=2bch
	mne FNSAVE	;; ofs=2bdh
	 variant 235h, 29
	 endvariant
	mne FSAVEW, ASM_D16	;; ofs=2c0h
	mne FSAVED, ASM_D32	;; ofs=2c1h
	 variant 235h, 29
	 endvariant
	mne FSCALE	;; ofs=2c5h
	 fpvariant 0d9h, 0, 0fdh
	 endvariant
	mne FSETPM, ASM_WAIT	;; ofs=2c9h
	mne FNSETPM	;; ofs=2cah
	 fpvariant 0dbh, 0, 0e4h, , ASM_MACH2
	 endvariant
	mne FSIN	;; ofs=2cfh
	 fpvariant 0d9h, 0, 0feh, , ASM_MACH3
	 endvariant
	mne FSINCOS	;; ofs=2d4h
	 fpvariant 0d9h, 0, 0fbh, , ASM_MACH3
	 endvariant
	mne FSQRT	;; ofs=2d9h
	 fpvariant 0d9h, 0, 0fah
	 endvariant
	mne FST	;; ofs=2ddh
	 variant 211h, 19
	 variant 215h, 20
	 fpvariant 0ddh, 27, 0d0h
	 endvariant
	mne FSTP	;; ofs=2e5h
	 variant 219h, 19
	 variant 21dh, 20
	 variant 23bh, 26
	 fpvariant 0ddh, 27, 0d8h
	 endvariant
	mne FSTCW, ASM_WAIT	;; ofs=2efh
	mne FNSTCW	;; ofs=2f0h
	 variant 239h, 25
	 endvariant
	mne FSTENV, ASM_WAIT	;; ofs=2f3h
	mne FNSTENV	;; ofs=2f4h
	 variant 231h, 29
	 endvariant
	mne FSTENVW, ASM_D16	;; ofs=2f7h
	mne FSTENVD, ASM_D32	;; ofs=2f8h
	 variant 231h, 29
	 endvariant
	mne FSTSW, ASM_WAIT	;; ofs=2fch
	mne FNSTSW	;; ofs=2fdh
	 fpvariant 0dfh, 30, 0e0h
	 variant 23dh, 25
	 endvariant
	mne FSUB	;; ofs=303h
	 variant 220h, 19
	 variant 224h, 20
	 fpvariant 0d8h, 21, 0e0h
	 fpvariant 0dch, 22, 0e8h
	 endvariant
	mne FSUBP	;; ofs=30eh
	 fpvariant 0deh, 23, 0e8h
	 fpvariant 0deh, 0, 0e9h
	 endvariant
	mne FISUB	;; ofs=315h
	 variant 222h, 24
	 variant 226h, 25
	 endvariant
	mne FSUBR	;; ofs=31ah
	 variant 228h, 19
	 variant 22ch, 20
	 fpvariant 0d8h, 21, 0e8h
	 fpvariant 0dch, 22, 0e0h
	 endvariant
	mne FSUBRP	;; ofs=325h
	 fpvariant 0deh, 23, 0e0h
	 fpvariant 0deh, 0, 0e1h
	 endvariant
	mne FISUBR	;; ofs=32ch
	 variant 22ah, 24
	 variant 22eh, 25
	 endvariant
	mne FTST	;; ofs=331h
	 fpvariant 0d9h, 0, 0e4h
	 endvariant
	mne FUCOM	;; ofs=335h
	 fpvariant 0ddh, 28, 0e0h, , ASM_MACH3
	 fpvariant 0ddh, 0, 0e1h, , ASM_MACH3
	 endvariant
	mne FUCOMI	;; ofs=33eh
	 fpvariant 0dbh, 28, 0e8h, , ASM_MACH6
	 fpvariant 0dbh, 0, 0e9h, , ASM_MACH6
	 endvariant
	mne FUCOMIP	;; ofs=347h
	 fpvariant 0dfh, 28, 0e8h, , ASM_MACH6
	 fpvariant 0dfh, 0, 0e9h, , ASM_MACH6
	 endvariant
	mne FUCOMP	;; ofs=350h
	 fpvariant 0ddh, 28, 0e8h, , ASM_MACH3
	 fpvariant 0ddh, 0, 0e9h, , ASM_MACH3
	 endvariant
	mne FUCOMPP	;; ofs=359h
	 fpvariant 0dah, 0, 0e9h, , ASM_MACH3
	 endvariant
	mne FWAIT	;; ofs=35eh
	 variant 09bh, 0
	 endvariant
	mne FXAM	;; ofs=361h
	 fpvariant 0d9h, 0, 0e5h
	 endvariant
	mne FXCH	;; ofs=365h
	 fpvariant 0d9h, 28, 0c8h
	 fpvariant 0d9h, 0, 0c9h
	 endvariant
	mne FXTRACT	;; ofs=36ch
	 fpvariant 0d9h, 0, 0f4h
	 endvariant
	mne FYL2X	;; ofs=370h
	 fpvariant 0d9h, 0, 0f1h
	 endvariant
	mne FYL2XP1	;; ofs=374h
	 fpvariant 0d9h, 0, 0f9h
	 endvariant
	mne HLT	;; ofs=378h
	 variant 0f4h, 0
	 endvariant
	mne IDIV	;; ofs=37bh
	 variant AGRP(6,7), 16
	 endvariant
	mne IMUL	;; ofs=37eh
	 variant AGRP(6,5), 16
	 variant 1afh, 8, , ASM_MACH3
	 variant 06bh, 31, , ASM_MACH1
	 variant 06bh, 32, , ASM_MACH1
	 variant 069h, 33, , ASM_MACH1
	 variant 069h, 34, , ASM_MACH1
	 endvariant
	mne IN	;; ofs=390h
	 variant 0e4h, 35
	 variant 0ech, 36
	 endvariant
	mne INC	;; ofs=395h
	 variant 040h, 17
	 variant AGRP(5,0), 16, ASM_LOCKABLE
	 endvariant
	mne INSB	;; ofs=39bh
	 variant 06ch, 0, , ASM_MACH1
	 endvariant
	mne INSW, ASM_D16	;; ofs=39fh
	mne INSD, ASM_D32	;; ofs=3a0h
	 variant 06dh, 0, , ASM_MACH1
	 endvariant
	mne INT	;; ofs=3a5h
	 variant 0cch, 37
	 variant 0cdh, 38
	 endvariant
	mne INTO	;; ofs=3aah
	 variant 0ceh, 0
	 endvariant
	mne INVD	;; ofs=3adh
	 variant 108h, 0, , ASM_MACH4
	 endvariant
	mne INVLPG	;; ofs=3b1h
	 variant AGRP(7,7), 29, , ASM_MACH4
	 endvariant
	mne IRET, ASM_D16	;; ofs=3b5h
	mne IRETD, ASM_D32	;; ofs=3b6h
	 variant 0cfh, 0
	 endvariant
	mne JA	;; ofs=3bah
	 variant 077h, 39
	 variant 187h, 12, , ASM_MACH3
	 endvariant
	mne JAE	;; ofs=3c0h
	 variant 073h, 39
	 variant 183h, 12, , ASM_MACH3
	 endvariant
	mne JB	;; ofs=3c6h
	 variant 072h, 39
	 variant 182h, 12, , ASM_MACH3
	 endvariant
	mne JBE	;; ofs=3cch
	 variant 076h, 39
	 variant 186h, 12, , ASM_MACH3
	 endvariant
	mne JC	;; ofs=3d2h
	 variant 072h, 39
	 variant 182h, 12, , ASM_MACH3
	 endvariant
	mne JCXZ, ASM_D16	;; ofs=3d8h
	mne JECXZ, ASM_D32	;; ofs=3d9h
	 variant 0e3h, 39
	 endvariant
	mne JE	;; ofs=3ddh
	 variant 074h, 39
	 variant 184h, 12, , ASM_MACH3
	 endvariant
	mne JG	;; ofs=3e3h
	 variant 07fh, 39
	 variant 18fh, 12, , ASM_MACH3
	 endvariant
	mne JGE	;; ofs=3e9h
	 variant 07dh, 39
	 variant 18dh, 12, , ASM_MACH3
	 endvariant
	mne JL	;; ofs=3efh
	 variant 07ch, 39
	 variant 18ch, 12, , ASM_MACH3
	 endvariant
	mne JLE	;; ofs=3f5h
	 variant 07eh, 39
	 variant 18eh, 12, , ASM_MACH3
	 endvariant
	mne JNA	;; ofs=3fbh
	 variant 076h, 39
	 variant 186h, 12, , ASM_MACH3
	 endvariant
	mne JNAE	;; ofs=401h
	 variant 072h, 39
	 variant 182h, 12, , ASM_MACH3
	 endvariant
	mne JNB	;; ofs=407h
	 variant 073h, 39
	 variant 183h, 12, , ASM_MACH3
	 endvariant
	mne JNBE	;; ofs=40dh
	 variant 077h, 39
	 variant 187h, 12, , ASM_MACH3
	 endvariant
	mne JNC	;; ofs=413h
	 variant 073h, 39
	 variant 183h, 12, , ASM_MACH3
	 endvariant
	mne JNE	;; ofs=419h
	 variant 075h, 39
	 variant 185h, 12, , ASM_MACH3
	 endvariant
	mne JNG	;; ofs=41fh
	 variant 07eh, 39
	 variant 18eh, 12, , ASM_MACH3
	 endvariant
	mne JNGE	;; ofs=425h
	 variant 07ch, 39
	 variant 18ch, 12, , ASM_MACH3
	 endvariant
	mne JNL	;; ofs=42bh
	 variant 07dh, 39
	 variant 18dh, 12, , ASM_MACH3
	 endvariant
	mne JNLE	;; ofs=431h
	 variant 07fh, 39
	 variant 18fh, 12, , ASM_MACH3
	 endvariant
	mne JNO	;; ofs=437h
	 variant 071h, 39
	 variant 181h, 12, , ASM_MACH3
	 endvariant
	mne JNP	;; ofs=43dh
	 variant 07bh, 39
	 variant 18bh, 12, , ASM_MACH3
	 endvariant
	mne JNS	;; ofs=443h
	 variant 079h, 39
	 variant 189h, 12, , ASM_MACH3
	 endvariant
	mne JNZ	;; ofs=449h
	 variant 075h, 39
	 variant 185h, 12, , ASM_MACH3
	 endvariant
	mne JO	;; ofs=44fh
	 variant 070h, 39
	 variant 180h, 12, , ASM_MACH3
	 endvariant
	mne JP	;; ofs=455h
	 variant 07ah, 39
	 variant 18ah, 12, , ASM_MACH3
	 endvariant
	mne JPE	;; ofs=45bh
	 variant 07ah, 39
	 variant 18ah, 12, , ASM_MACH3
	 endvariant
	mne JPO	;; ofs=461h
	 variant 07bh, 39
	 variant 18bh, 12, , ASM_MACH3
	 endvariant
	mne JS	;; ofs=467h
	 variant 078h, 39
	 variant 188h, 12, , ASM_MACH3
	 endvariant
	mne JZ	;; ofs=46dh
	 variant 074h, 39
	 variant 184h, 12, , ASM_MACH3
	 endvariant
	mne JMP	;; ofs=473h
	 variant 0ebh, 39
	 variant 0e9h, 12
	 variant AGRP(3,4), 40
	 variant AGRP(3,5), 14
	 variant 0eah, 13
	 endvariant
	mne LAHF	;; ofs=47eh
	 variant 09fh, 0
	 endvariant
	mne LAR	;; ofs=481h
	 variant 102h, 8, , ASM_MACH2
	 endvariant
	mne LDS	;; ofs=485h
	 variant 0c5h, 7
	 endvariant
	mne LSS	;; ofs=488h
	 variant 1b2h, 7, , ASM_MACH3
	 endvariant
	mne LES	;; ofs=48ch
	 variant 0c4h, 7
	 endvariant
	mne LFS	;; ofs=48fh
	 variant 1b4h, 7, , ASM_MACH3
	 endvariant
	mne LGS	;; ofs=493h
	 variant 1b5h, 7, , ASM_MACH3
	 endvariant
	mne LEA	;; ofs=497h
	 variant 08dh, 7
	 endvariant
	mne LEAVE	;; ofs=49ah
	 variant 0c9h, 0, , ASM_MACH1
	 endvariant
	mne LGDT	;; ofs=49eh
	 variant AGRP(7,2), 29, , ASM_MACH2
	 endvariant
	mne LIDT	;; ofs=4a2h
	 variant AGRP(7,3), 29, , ASM_MACH2
	 endvariant
	mne LLDT	;; ofs=4a6h
	 variant AGRP(8,2), 41, , ASM_MACH2
	 endvariant
	mne LMSW	;; ofs=4aah
	 variant AGRP(7,6), 41, , ASM_MACH2
	 endvariant
	mne LOCK, ASM_LOCKREP, 0f0h	;; ofs=4aeh
	mne LODSB	;; ofs=4b0h
	 variant 0ach, 0
	 endvariant
	mne LODSW, ASM_D16	;; ofs=4b3h
	mne LODSD, ASM_D32	;; ofs=4b4h
	 variant 0adh, 0
	 endvariant
	mne LOOP	;; ofs=4b8h
	 variant 0e2h, 39
	 endvariant
	mne LOOPW, ASM_D16	;; ofs=4bbh
	mne LOOPD, ASM_D32	;; ofs=4bch
	 variant 0e2h, 39
	 endvariant
	mne LOOPZ	;; ofs=4c0h
	 variant 0e1h, 39
	 endvariant
	mne LOOPE	;; ofs=4c3h
	 variant 0e1h, 39
	 endvariant
	mne LOOPEW, ASM_D16	;; ofs=4c6h
	mne LOOPED, ASM_D32	;; ofs=4c7h
	 variant 0e1h, 39
	 endvariant
	mne LOOPZW, ASM_D16	;; ofs=4cbh
	mne LOOPZD, ASM_D32	;; ofs=4cch
	 variant 0e1h, 39
	 endvariant
	mne LOOPNZ	;; ofs=4d0h
	 variant 0e0h, 39
	 endvariant
	mne LOOPNE	;; ofs=4d3h
	 variant 0e0h, 39
	 endvariant
	mne LOOPNEW, ASM_D16	;; ofs=4d6h
	mne LOOPNED, ASM_D32	;; ofs=4d7h
	 variant 0e0h, 39
	 endvariant
	mne LOOPNZW, ASM_D16	;; ofs=4dbh
	mne LOOPNZD, ASM_D32	;; ofs=4dch
	 variant 0e0h, 39
	 endvariant
	mne LSL	;; ofs=4e0h
	 variant 103h, 8, , ASM_MACH2
	 endvariant
	mne LTR	;; ofs=4e4h
	 variant AGRP(8,3), 41, , ASM_MACH2
	 endvariant
	mne MOV	;; ofs=4e8h
	 variant 0a0h, 44
	 variant 0a2h, 45
	 variant 088h, 4
	 variant 08ah, 5
	 variant 08ch, 42
	 variant 08eh, 43
	 variant 0b0h, 46
	 variant 0b8h, 47
	 variant AGRP(9,0), 2
	 variant 120h, 70, , ASM_MACH3
	 variant 122h, 71, , ASM_MACH3
	 variant 121h, 72, , ASM_MACH3
	 variant 123h, 73, , ASM_MACH3
	 variant 124h, 74, , ASM_MACH3
	 variant 126h, 75, , ASM_MACH3
	 endvariant
	mne MOVD	;; ofs=50dh
	 variant 16eh, 76, , ASM_MACH5
	 variant 17eh, 77, , ASM_MACH5
	 endvariant
	mne MOVQ	;; ofs=514h
	 variant 16fh, 78, , ASM_MACH5
	 variant 17fh, 79, , ASM_MACH5
	 endvariant
	mne MOVSB	;; ofs=51bh
	 variant 0a4h, 0
	 endvariant
	mne MOVSW, ASM_D16	;; ofs=51eh
	mne MOVSD, ASM_D32	;; ofs=51fh
	 variant 0a5h, 0
	 endvariant
	mne MOVSX	;; ofs=523h
	 variant 1beh, 48, , ASM_MACH3
	 variant 1bfh, 49, , ASM_MACH3
	 endvariant
	mne MOVZX	;; ofs=52ah
	 variant 1b6h, 48, , ASM_MACH3
	 variant 1b7h, 49, , ASM_MACH3
	 endvariant
	mne MUL	;; ofs=531h
	 variant AGRP(6,4), 16
	 endvariant
	mne NEG	;; ofs=534h
	 variant AGRP(6,3), 16, ASM_LOCKABLE
	 endvariant
	mne NOP	;; ofs=538h
	 variant 090h, 0
	 endvariant
	mne NOT	;; ofs=53bh
	 variant AGRP(6,2), 16, ASM_LOCKABLE
	 endvariant
	mne OR	;; ofs=53fh
	 variant AGRP(0,1), 3, ASM_LOCKABLE
	 variant 00ch, 1
	 variant AGRP(1,1), 2, ASM_LOCKABLE
	 variant 008h, 4, ASM_LOCKABLE
	 variant 00ah, 5
	 endvariant
	mne ORG, ASM_ORG	;; ofs=54dh
	mne OUT	;; ofs=54fh
	 variant 0e6h, 50
	 variant 0eeh, 51
	 endvariant
	mne OUTSB	;; ofs=554h
	 variant 06eh, 0, , ASM_MACH1
	 endvariant
	mne OUTSW, ASM_D16	;; ofs=558h
	mne OUTSD, ASM_D32	;; ofs=559h
	 variant 06fh, 0, , ASM_MACH1
	 endvariant
	mne POP	;; ofs=55eh
	 variant AGRP(10,0), 52
	 variant 058h, 17
	 variant 01fh, 67
	 variant 007h, 64
	 variant 017h, 66
	 variant 1a1h, 68, , ASM_MACH3
	 variant 1a9h, 69, , ASM_MACH3
	 endvariant
	mne POPA, ASM_D16	;; ofs=56fh
	mne POPAD, ASM_D32	;; ofs=570h
	 variant 061h, 0, , ASM_MACH1
	 endvariant
	mne POPF, ASM_D16	;; ofs=575h
	mne POPFD, ASM_D32	;; ofs=576h
	 variant 09dh, 0
	 endvariant
	mne PUSH	;; ofs=57ah
	 variant 050h, 17
	 variant AGRP(3,6), 40
	 variant 06ah, 54, , ASM_MACH1
	 variant 068h, 53, , ASM_MACH1
	 variant 00eh, 65
	 variant 016h, 66
	 variant 01eh, 67
	 variant 006h, 64
	 variant 1a0h, 68, , ASM_MACH3
	 variant 1a8h, 69, , ASM_MACH3
	 endvariant
	mne PUSHA, ASM_D16	;; ofs=593h
	mne PUSHAD, ASM_D32	;; ofs=594h
	 variant 060h, 0, , ASM_MACH1
	 endvariant
	mne PUSHF, ASM_D16	;; ofs=599h
	mne PUSHFD, ASM_D32	;; ofs=59ah
	 variant 09ch, 0
	 endvariant
	mne RCL	;; ofs=59eh
	 variant AGRP(11,2), 55
	 variant AGRP(12,2), 56
	 variant AGRP(13,2), 57, , ASM_MACH1
	 endvariant
	mne RCR	;; ofs=5a6h
	 variant AGRP(11,3), 55
	 variant AGRP(12,3), 56
	 variant AGRP(13,3), 57, , ASM_MACH1
	 endvariant
	mne ROL	;; ofs=5aeh
	 variant AGRP(11,0), 55
	 variant AGRP(12,0), 56
	 variant AGRP(13,0), 57, , ASM_MACH1
	 endvariant
	mne ROR	;; ofs=5b6h
	 variant AGRP(11,1), 55
	 variant AGRP(12,1), 56
	 variant AGRP(13,1), 57, , ASM_MACH1
	 endvariant
	mne RDMSR	;; ofs=5beh
	 variant 132h, 0, , ASM_MACH5
	 endvariant
	mne REP, ASM_LOCKREP, 0f3h	;; ofs=5c2h
	mne REPE, ASM_LOCKREP, 0f3h	;; ofs=5c4h
	mne REPNE, ASM_LOCKREP, 0f2h	;; ofs=5c6h
	mne RET	;; ofs=5c8h
	 variant 0c3h, 0
	 variant 0c2h, 58
	 endvariant
	mne RETF, ASM_D16	;; ofs=5cdh
	mne RETFD, ASM_D32	;; ofs=5ceh
	 variant 0cbh, 0
	 variant 0cah, 58
	 endvariant
	mne RSM	;; ofs=5d4h
	 variant 1aah, 0, , ASM_MACH5
	 endvariant
	mne SAHF	;; ofs=5d8h
	 variant 09eh, 0
	 endvariant
	mne SAL	;; ofs=5dbh
	 variant AGRP(11,4), 55
	 variant AGRP(12,4), 56
	 variant AGRP(13,4), 57, , ASM_MACH1
	 endvariant
	mne SAR	;; ofs=5e3h
	 variant AGRP(11,7), 55
	 variant AGRP(12,7), 56
	 variant AGRP(13,7), 57, , ASM_MACH1
	 endvariant
	mne SEG	;; ofs=5ebh
	 variant 026h, 64
	 variant 02eh, 65
	 variant 036h, 66
	 variant 03eh, 67
	 variant 064h, 68
	 variant 065h, 69
	 endvariant
	mne ES, ASM_SEG, 026h	;; ofs=5f8h
	mne CS, ASM_SEG, 02eh	;; ofs=5fah
	mne SS, ASM_SEG, 036h	;; ofs=5fch
	mne DS, ASM_SEG, 03eh	;; ofs=5feh
	mne FS, ASM_SEG, 064h	;; ofs=600h
	mne GS, ASM_SEG, 065h	;; ofs=602h
	mne SHL	;; ofs=604h
	 variant AGRP(11,4), 55
	 variant AGRP(12,4), 56
	 variant AGRP(13,4), 57, , ASM_MACH1
	 endvariant
	mne SHR	;; ofs=60ch
	 variant AGRP(11,5), 55
	 variant AGRP(12,5), 56
	 variant AGRP(13,5), 57, , ASM_MACH1
	 endvariant
	mne SBB	;; ofs=614h
	 variant AGRP(0,3), 3, ASM_LOCKABLE
	 variant 01ch, 1
	 variant AGRP(1,3), 2, ASM_LOCKABLE
	 variant 018h, 4, ASM_LOCKABLE
	 variant 01ah, 5
	 endvariant
	mne SCASB	;; ofs=622h
	 variant 0aeh, 0
	 endvariant
	mne SCASW, ASM_D16	;; ofs=625h
	mne SCASD, ASM_D32	;; ofs=626h
	 variant 0afh, 0
	 endvariant
	mne SETA	;; ofs=62ah
	 variant 197h, 59, , ASM_MACH3
	 endvariant
	mne SETAE	;; ofs=62eh
	 variant 193h, 59, , ASM_MACH3
	 endvariant
	mne SETB	;; ofs=632h
	 variant 192h, 59, , ASM_MACH3
	 endvariant
	mne SETBE	;; ofs=636h
	 variant 196h, 59, , ASM_MACH3
	 endvariant
	mne SETC	;; ofs=63ah
	 variant 192h, 59, , ASM_MACH3
	 endvariant
	mne SETE	;; ofs=63eh
	 variant 194h, 59, , ASM_MACH3
	 endvariant
	mne SETG	;; ofs=642h
	 variant 19fh, 59, , ASM_MACH3
	 endvariant
	mne SETGE	;; ofs=646h
	 variant 19dh, 59, , ASM_MACH3
	 endvariant
	mne SETL	;; ofs=64ah
	 variant 19ch, 59, , ASM_MACH3
	 endvariant
	mne SETLE	;; ofs=64eh
	 variant 19eh, 59, , ASM_MACH3
	 endvariant
	mne SETNA	;; ofs=652h
	 variant 196h, 59, , ASM_MACH3
	 endvariant
	mne SETNAE	;; ofs=656h
	 variant 192h, 59, , ASM_MACH3
	 endvariant
	mne SETNB	;; ofs=65ah
	 variant 193h, 59, , ASM_MACH3
	 endvariant
	mne SETNBE	;; ofs=65eh
	 variant 197h, 59, , ASM_MACH3
	 endvariant
	mne SETNC	;; ofs=662h
	 variant 193h, 59, , ASM_MACH3
	 endvariant
	mne SETNE	;; ofs=666h
	 variant 195h, 59, , ASM_MACH3
	 endvariant
	mne SETNG	;; ofs=66ah
	 variant 19eh, 59, , ASM_MACH3
	 endvariant
	mne SETNGE	;; ofs=66eh
	 variant 19ch, 59, , ASM_MACH3
	 endvariant
	mne SETNL	;; ofs=672h
	 variant 19dh, 59, , ASM_MACH3
	 endvariant
	mne SETNLE	;; ofs=676h
	 variant 19fh, 59, , ASM_MACH3
	 endvariant
	mne SETNO	;; ofs=67ah
	 variant 191h, 59, , ASM_MACH3
	 endvariant
	mne SETNP	;; ofs=67eh
	 variant 19bh, 59, , ASM_MACH3
	 endvariant
	mne SETNS	;; ofs=682h
	 variant 199h, 59, , ASM_MACH3
	 endvariant
	mne SETNZ	;; ofs=686h
	 variant 195h, 59, , ASM_MACH3
	 endvariant
	mne SETO	;; ofs=68ah
	 variant 190h, 59, , ASM_MACH3
	 endvariant
	mne SETP	;; ofs=68eh
	 variant 19ah, 59, , ASM_MACH3
	 endvariant
	mne SETPE	;; ofs=692h
	 variant 19ah, 59, , ASM_MACH3
	 endvariant
	mne SETPO	;; ofs=696h
	 variant 19bh, 59, , ASM_MACH3
	 endvariant
	mne SETS	;; ofs=69ah
	 variant 198h, 59, , ASM_MACH3
	 endvariant
	mne SETZ	;; ofs=69eh
	 variant 194h, 59, , ASM_MACH3
	 endvariant
	mne SGDT	;; ofs=6a2h
	 variant AGRP(7,0), 29, , ASM_MACH2
	 endvariant
	mne SIDT	;; ofs=6a6h
	 variant AGRP(7,1), 29, , ASM_MACH2
	 endvariant
	mne SHLD	;; ofs=6aah
	 variant 1a4h, 60, , ASM_MACH3
	 variant 1a5h, 61, , ASM_MACH3
	 endvariant
	mne SHRD	;; ofs=6b1h
	 variant 1ach, 60, , ASM_MACH3
	 variant 1adh, 61, , ASM_MACH3
	 endvariant
	mne SLDT	;; ofs=6b8h
	 variant AGRP(8,0), 40, , ASM_MACH2
	 endvariant
	mne SMSW	;; ofs=6bch
	 variant AGRP(7,4), 40, , ASM_MACH2
	 endvariant
	mne STC	;; ofs=6c0h
	 variant 0f9h, 0
	 endvariant
	mne STD	;; ofs=6c3h
	 variant 0fdh, 0
	 endvariant
	mne STI	;; ofs=6c6h
	 variant 0fbh, 0
	 endvariant
	mne STOSB	;; ofs=6c9h
	 variant 0aah, 0
	 endvariant
	mne STOSW, ASM_D16	;; ofs=6cch
	mne STOSD, ASM_D32	;; ofs=6cdh
	 variant 0abh, 0
	 endvariant
	mne STR	;; ofs=6d1h
	 variant AGRP(8,1), 41, , ASM_MACH2
	 endvariant
	mne SUB	;; ofs=6d5h
	 variant AGRP(0,5), 3, ASM_LOCKABLE
	 variant 02ch, 1
	 variant AGRP(1,5), 2, ASM_LOCKABLE
	 variant 028h, 4, ASM_LOCKABLE
	 variant 02ah, 5
	 endvariant
	mne TEST	;; ofs=6e3h
	 variant 0a8h, 1
	 variant AGRP(6,0), 2
	 variant 084h, 4
	 variant 084h, 5
	 endvariant
	mne VERR	;; ofs=6ech
	 variant AGRP(8,4), 41, , ASM_MACH2
	 endvariant
	mne VERW	;; ofs=6f0h
	 variant AGRP(8,5), 41, , ASM_MACH2
	 endvariant
	mne WAIT	;; ofs=6f4h
	 variant 09bh, 0
	 endvariant
	mne WBINVD	;; ofs=6f7h
	 variant 109h, 0, , ASM_MACH4
	 endvariant
	mne WRMSR	;; ofs=6fbh
	 variant 130h, 0, , ASM_MACH5
	 endvariant
	mne XADD	;; ofs=6ffh
	 variant 1c0h, 4, ASM_LOCKABLE, ASM_MACH4
	 endvariant
	mne XCHG	;; ofs=704h
	 variant 090h, 62
	 variant 090h, 63
	 variant 086h, 4, ASM_LOCKABLE
	 variant 086h, 5, ASM_LOCKABLE
	 endvariant
	mne XLAT	;; ofs=70fh
	 variant 0d7h, 0
	 endvariant
	mne XLATB	;; ofs=712h
	 variant 0d7h, 0
	 endvariant
	mne XOR	;; ofs=715h
	 variant AGRP(0,6), 3, ASM_LOCKABLE
	 variant 034h, 1
	 variant AGRP(1,6), 2, ASM_LOCKABLE
	 variant 030h, 4, ASM_LOCKABLE
	 variant 032h, 5
	 endvariant

end_mnlist label byte

;; --- Disassembler: compressed table of the opcode types.
;; --- If the item has the format OT(xx), it refers to table 'oplists'.
;; --- Otherwise it's an offset for internal table 'disjmp'.

optypes label byte
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),OT(40),OT(40)	;; 00 - 07 (main opcode part)
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),OT(41),  002h	;; 08 - 0f
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),OT(42),OT(42)	;; 10 - 17
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),OT(43),OT(43)	;; 18 - 1f
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),  00ah,OT(00)	;; 20 - 27
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),  00ah,OT(00)	;; 28 - 2f
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),  00ah,OT(00)	;; 30 - 37
	db OT(04),OT(04),OT(05),OT(05),OT(01),OT(01),  00ah,OT(00)	;; 38 - 3f
	db OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11)	;; 40 - 47
	db OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11)	;; 48 - 4f
	db OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11)	;; 50 - 57
	db OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11),OT(11)	;; 58 - 5f
	db OT(00),OT(00),OT(07),OT(06),  00ah,  00ah,  00ah,  00ah	;; 60 - 67
	db OT(35),OT(21),OT(36),OT(1F),OT(00),OT(00),OT(00),OT(00)	;; 68 - 6f
	db OT(27),OT(27),OT(27),OT(27),OT(27),OT(27),OT(27),OT(27)	;; 70 - 77
	db OT(27),OT(27),OT(27),OT(27),OT(27),OT(27),OT(27),OT(27)	;; 78 - 7f
	db   004h,  004h,  000h,  004h,OT(04),OT(04),OT(05),OT(05)	;; 80 - 87
	db OT(04),OT(04),OT(05),OT(05),OT(2A),OT(07),OT(2B),  004h	;; 88 - 8f
	db OT(00),OT(3E),OT(3E),OT(3E),OT(3E),OT(3E),OT(3E),OT(3E)	;; 90 - 97
	db OT(00),OT(00),OT(0D),OT(00),OT(00),OT(00),OT(00),OT(00)	;; 98 - 9f
	db OT(2C),OT(2C),OT(2D),OT(2D),OT(00),OT(00),OT(00),OT(00)	;; a0 - a7
	db OT(01),OT(01),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00)	;; a8 - af
	db OT(2E),OT(2E),OT(2E),OT(2E),OT(2E),OT(2E),OT(2E),OT(2E)	;; b0 - b7
	db OT(2F),OT(2F),OT(2F),OT(2F),OT(2F),OT(2F),OT(2F),OT(2F)	;; b8 - bf
	db   004h,  004h,OT(3A),OT(00),OT(07),OT(07),  004h,  004h	;; c0 - c7
	db OT(12),OT(00),OT(3A),OT(00),OT(25),OT(26),OT(00),OT(00)	;; c8 - cf
	db   004h,  004h,  004h,  004h,OT(26),OT(26),  000h,OT(00)	;; d0 - d7
	db   006h,  006h,  006h,  006h,  006h,  006h,  006h,  006h	;; d8 - df
	db OT(27),OT(27),OT(27),OT(27),OT(23),OT(23),OT(32),OT(32)	;; e0 - e7
	db OT(0C),OT(0C),OT(0D),OT(27),OT(24),OT(24),OT(33),OT(33)	;; e8 - ef
	db   00ah,  000h,  00ah,  00ah,OT(00),OT(00),  004h,  004h	;; f0 - f7
	db OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),  004h,  004h	;; f8 - ff
	db OT(02),OT(02),OT(02),OT(02),OT(02),OT(02),OT(02),OT(02)	;; 100 - 107 (Intel group 1)
	db OT(03),OT(03),OT(03),OT(03),OT(03),OT(03),OT(03),OT(03)	;; 108 - 10f
	db OT(37),OT(37),OT(37),OT(37),OT(37),OT(37),  000h,OT(37)	;; 110 - 117 (Intel group 2)
	db OT(38),OT(38),OT(38),OT(38),OT(38),OT(38),  000h,OT(38)	;; 118 - 11f
	db OT(39),OT(39),OT(39),OT(39),OT(39),OT(39),  000h,OT(39)	;; 120 - 127 (Intel group 2a)
	db OT(02),  000h,OT(10),OT(10),OT(10),OT(10),OT(10),OT(10)	;; 128 - 12f (Intel group 3)
	db OT(10),OT(10),OT(28),OT(0E),OT(28),OT(0E),OT(28),  000h	;; 130 - 137 (Intel group 5)
	db OT(28),OT(29),OT(29),OT(29),OT(29),OT(29),  000h,  000h	;; 138 - 13f (Intel group 6)
	db OT(1D),OT(1D),OT(1D),OT(1D),OT(28),  000h,OT(29),OT(1D)	;; 140 - 147 (Intel group 7)
	db OT(13),OT(13),OT(13),OT(13),OT(13),OT(13),OT(13),OT(13)	;; 148 - 14f (Coprocessor d8)
	db OT(15),OT(15),OT(1C),OT(1C),OT(15),OT(15),OT(15),OT(15)	;; 150 - 157
	db OT(13),  000h,OT(13),OT(13),OT(1D),OT(19),OT(1D),OT(19)	;; 158 - 15f (Coprocessor d9)
	db OT(1B),OT(1C),  008h,  000h,  008h,  008h,  008h,  008h	;; 160 - 167
	db OT(18),OT(18),OT(18),OT(18),OT(18),OT(18),OT(18),OT(18)	;; 168 - 16f (Coprocessor da)
	db OT(15),OT(15),OT(15),OT(15),  000h,  008h,  000h,  000h	;; 170 - 177
	db OT(18),  000h,OT(18),OT(18),  000h,OT(1A),  000h,OT(1A)	;; 178 - 17f (Coprocessor db)
	db OT(15),OT(15),OT(15),OT(15),  008h,OT(1C),OT(1C),  000h	;; 180 - 187
	db OT(14),OT(14),OT(14),OT(14),OT(14),OT(14),OT(14),OT(14)	;; 188 - 18f (Coprocessor dc)
	db OT(16),OT(16),  000h,  000h,OT(16),OT(16),OT(16),OT(16)	;; 190 - 197
	db OT(14),  000h,OT(14),OT(14),OT(1D),  000h,OT(1D),OT(19)	;; 198 - 19f (Coprocessor dd)
	db OT(1B),  000h,OT(1B),OT(1B),OT(1C),OT(1C),  000h,  000h	;; 1a0 - 1a7
	db OT(19),OT(19),OT(19),OT(19),OT(19),OT(19),OT(19),OT(19)	;; 1a8 - 1af (Coprocessor de)
	db OT(17),OT(17),  000h,  008h,OT(17),OT(17),OT(17),OT(17)	;; 1b0 - 1b7
	db OT(19),  000h,OT(19),OT(19),OT(1A),OT(0F),OT(1A),OT(0F)	;; 1b8 - 1bf (Coprocessor df)
	db   000h,  000h,  000h,  000h,  008h,OT(1C),OT(1C),  000h	;; 1c0 - 1c7
	db OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),  000h	;; 1c8 - 1cf (Coprocessor groups)
	db OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00)	;; 1d0 - 1d7
	db OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00)	;; 1d8 - 1df
SPARSE_BASE	equ $ - optypes

;; --- The rest of these are squeezed.
	db      0,  004h,  004h,OT(08),OT(08),OT(00),OT(00),OT(00)	;; 00
	db OT(46),OT(48),OT(47),OT(49),OT(4A),OT(4B),OT(00),OT(00)	;; 08
	db OT(08),OT(08),OT(08),OT(08),OT(08),OT(08),OT(08),OT(08)	;; 10
	db OT(08),OT(08),OT(08),OT(08),OT(08),OT(08),OT(08),OT(08)	;; 18
	db OT(4C),OT(4E),OT(00),OT(4D),OT(4F),OT(0C),OT(0C),OT(0C)	;; 20
	db OT(0C),OT(0C),OT(0C),OT(0C),OT(0C),OT(0C),OT(0C),OT(0C)	;; 28
	db OT(0C),OT(0C),OT(0C),OT(0C),OT(0C),OT(3B),OT(3B),OT(3B)	;; 30
	db OT(3B),OT(3B),OT(3B),OT(3B),OT(3B),OT(3B),OT(3B),OT(3B)	;; 38
	db OT(3B),OT(3B),OT(3B),OT(3B),OT(3B),OT(44),OT(44),OT(00)	;; 40
	db OT(0A),OT(3C),OT(3D),OT(45),OT(45),OT(00),OT(0A),OT(3C)	;; 48
	db OT(3D),OT(08),OT(04),OT(04),OT(07),OT(0A),OT(07),OT(07)	;; 50
	db OT(30),OT(31),  004h,OT(0A),OT(08),OT(08),OT(30),OT(31)	;; 58
	db OT(04),OT(04),  004h,OT(09),OT(09),OT(09),OT(09),OT(09)	;; 60
	db OT(09),OT(09),OT(09),OT(10),OT(10),OT(0B),OT(0B),OT(0B)	;; 68
	db OT(0B),OT(0F),OT(34),OT(02),OT(00),OT(00),OT(00),OT(00)	;; 70
	db OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00),OT(00)	;; 78
	db OT(1E)

P186	equ 1000h
P286	equ 2000h
P386	equ 3000h
P486	equ 4000h
P586	equ 5000h
P686	equ 6000h

	align 2

;; --- Disassembler: compressed table of additional information.
;; --- Bits 0-11 usually are the offset of the mnemonics table.
;; --- Bits 12-15 are the cpu which introduced this opcode.

opinfo label word
	dw  MN_ADD, MN_ADD, MN_ADD, MN_ADD	;; 00
	dw  MN_ADD, MN_ADD, MN_PUSH, MN_POP	;; 04
	dw  MN_OR, MN_OR, MN_OR, MN_OR	;; 08
	dw  MN_OR, MN_OR, MN_PUSH, 01e0h	;; 0c
	dw  MN_ADC, MN_ADC, MN_ADC, MN_ADC	;; 10
	dw  MN_ADC, MN_ADC, MN_PUSH, MN_POP	;; 14
	dw  MN_SBB, MN_SBB, MN_SBB, MN_SBB	;; 18
	dw  MN_SBB, MN_SBB, MN_PUSH, MN_POP	;; 1c
	dw  MN_AND, MN_AND, MN_AND, MN_AND	;; 20
	dw  MN_AND, MN_AND, 0001h, MN_DAA	;; 24
	dw  MN_SUB, MN_SUB, MN_SUB, MN_SUB	;; 28
	dw  MN_SUB, MN_SUB, 0101h, MN_DAS	;; 2c
	dw  MN_XOR, MN_XOR, MN_XOR, MN_XOR	;; 30
	dw  MN_XOR, MN_XOR, 0201h, MN_AAA	;; 34
	dw  MN_CMP, MN_CMP, MN_CMP, MN_CMP	;; 38
	dw  MN_CMP, MN_CMP, 0301h, MN_AAS	;; 3c
	dw  MN_INC, MN_INC, MN_INC, MN_INC	;; 40
	dw  MN_INC, MN_INC, MN_INC, MN_INC	;; 44
	dw  MN_DEC, MN_DEC, MN_DEC, MN_DEC	;; 48
	dw  MN_DEC, MN_DEC, MN_DEC, MN_DEC	;; 4c
	dw  MN_PUSH, MN_PUSH, MN_PUSH, MN_PUSH	;; 50
	dw  MN_PUSH, MN_PUSH, MN_PUSH, MN_PUSH	;; 54
	dw  MN_POP, MN_POP, MN_POP, MN_POP	;; 58
	dw  MN_POP, MN_POP, MN_POP, MN_POP	;; 5c
	dw  P186 + MN_PUSHA, P186 + MN_POPA, P186 + MN_BOUND, P286 + MN_ARPL	;; 60
	dw  P386 + 0401h, P386 + 0501h, P386 + 0010h, P386 + 0020h	;; 64
	dw  P186 + MN_PUSH, P186 + MN_IMUL, P186 + MN_PUSH, P186 + MN_IMUL	;; 68
	dw  P186 + MN_INSB, P186 + MN_INSW, P186 + MN_OUTSB, P186 + MN_OUTSW	;; 6c
	dw  MN_JO, MN_JNO, MN_JB, MN_JAE	;; 70
	dw  MN_JZ, MN_JNZ, MN_JBE, MN_JA	;; 74
	dw  MN_JS, MN_JNS, MN_JPE, MN_JPO	;; 78
	dw  MN_JL, MN_JGE, MN_JLE, MN_JG	;; 7c
	dw  0100h, 0100h, 0000h, 0108h	;; 80
	dw  MN_TEST, MN_TEST, MN_XCHG, MN_XCHG	;; 84
	dw  MN_MOV, MN_MOV, MN_MOV, MN_MOV	;; 88
	dw  MN_MOV, MN_LEA, MN_MOV, 02f8h	;; 8c
	dw  MN_NOP, MN_XCHG, MN_XCHG, MN_XCHG	;; 90
	dw  MN_XCHG, MN_XCHG, MN_XCHG, MN_XCHG	;; 94
	dw  MN_CBW, MN_CWD, MN_CALL, MN_WAIT	;; 98
	dw  MN_PUSHF, MN_POPF, MN_SAHF, MN_LAHF	;; 9c
	dw  MN_MOV, MN_MOV, MN_MOV, MN_MOV	;; a0
	dw  MN_MOVSB, MN_MOVSW, MN_CMPSB, MN_CMPSW	;; a4
	dw  MN_TEST, MN_TEST, MN_STOSB, MN_STOSW	;; a8
	dw  MN_LODSB, MN_LODSW, MN_SCASB, MN_SCASW	;; ac
	dw  MN_MOV, MN_MOV, MN_MOV, MN_MOV	;; b0
	dw  MN_MOV, MN_MOV, MN_MOV, MN_MOV	;; b4
	dw  MN_MOV, MN_MOV, MN_MOV, MN_MOV	;; b8
	dw  MN_MOV, MN_MOV, MN_MOV, MN_MOV	;; bc
	dw  0120h, 0120h, MN_RET, MN_RET	;; c0
	dw  MN_LES, MN_LDS, 0300h, 0300h	;; c4
	dw  P186 + MN_ENTER, P186 + MN_LEAVE, MN_RETF, MN_RETF	;; c8
	dw  MN_INT, MN_INT, MN_INTO, MN_IRET	;; cc
	dw  0110h, 0110h, 0118h, 0118h	;; d0
	dw  MN_AAM, MN_AAD, 0000h, MN_XLATB	;; d4
	dw  0148h, 0158h, 0168h, 0178h	;; d8
	dw  0188h, 0198h, 01a8h, 01b8h	;; dc
	dw  MN_LOOPNZW, MN_LOOPZW, MN_LOOPW, MN_JCXZ	;; e0
	dw  MN_IN, MN_IN, MN_OUT, MN_OUT	;; e4
	dw  MN_CALL, MN_JMP, MN_JMP, MN_JMP	;; e8
	dw  MN_IN, MN_IN, MN_OUT, MN_OUT	;; ec
	dw  0008h, 0000h, 0002h, 0006h	;; f0
	dw  MN_HLT, MN_CMC, 0128h, 0128h	;; f4
	dw  MN_CLC, MN_STC, MN_CLI, MN_STI	;; f8
	dw  MN_CLD, MN_STD, 02e0h, 0130h	;; fc
	dw  MN_ADD, MN_OR, MN_ADC, MN_SBB	;; 100
	dw  MN_AND, MN_SUB, MN_XOR, MN_CMP	;; 104
	dw  MN_ADD, MN_OR, MN_ADC, MN_SBB	;; 108
	dw  MN_AND, MN_SUB, MN_XOR, MN_CMP	;; 10c
	dw  MN_ROL, MN_ROR, MN_RCL, MN_RCR	;; 110
	dw  MN_SHL, MN_SHR, 0000h, MN_SAR	;; 114
	dw  MN_ROL, MN_ROR, MN_RCL, MN_RCR	;; 118
	dw  MN_SHL, MN_SHR, 0000h, MN_SAR	;; 11c
	dw  P186 + MN_ROL, P186 + MN_ROR, P186 + MN_RCL, P186 + MN_RCR	;; 120
	dw  P186 + MN_SHL, P186 + MN_SHR, 0000h, P186 + MN_SAR	;; 124
	dw  MN_TEST, 0000h, MN_NOT, MN_NEG	;; 128
	dw  MN_MUL, MN_IMUL, MN_DIV, MN_IDIV	;; 12c
	dw  MN_INC, MN_DEC, MN_CALL, MN_CALL	;; 130
	dw  MN_JMP, MN_JMP, MN_PUSH, 0000h	;; 134
	dw  P286 + MN_SLDT, P286 + MN_STR, P286 + MN_LLDT, P286 + MN_LTR	;; 138
	dw  P286 + MN_VERR, P286 + MN_VERW, 0000h, 0000h	;; 13c
	dw  P286 + MN_SGDT, P286 + MN_SIDT, P286 + MN_LGDT, P286 + MN_LIDT	;; 140
	dw  P286 + MN_SMSW, 0000h, P286 + MN_LMSW, P486 + MN_INVLPG	;; 144
	dw  MN_FADD, MN_FMUL, MN_FCOM, MN_FCOMP	;; 148
	dw  MN_FSUB, MN_FSUBR, MN_FDIV, MN_FDIVR	;; 14c
	dw  MN_FADD, MN_FMUL, MN_FCOM, MN_FCOMP	;; 150
	dw  MN_FSUB, MN_FSUBR, MN_FDIV, MN_FDIVR	;; 154
	dw  MN_FLD, 0000h, MN_FST, MN_FSTP	;; 158
	dw  MN_FLDENV, MN_FNLDCW, MN_FNSTENV, MN_FNSTCW	;; 15c
	dw  MN_FLD, MN_FXCH, 0308h, 0000h	;; 160
	dw  0310h, 01c8h, 01d0h, 01d8h	;; 164
	dw  MN_FIADD, MN_FIMUL, MN_FICOM, MN_FICOMP	;; 168
	dw  MN_FISUB, MN_FISUBR, MN_FIDIV, MN_FIDIVR	;; 16c
	dw  P686 + MN_FCMOVB, P686 + MN_FCMOVE, P686 + MN_FCMOVBE, P686 + MN_FCMOVU	;; 170
	dw  0000h, 0318h, 0000h, 0000h	;; 174
	dw  MN_FILD, 0000h, MN_FIST, MN_FISTP	;; 178
	dw  0000h, MN_FLD, 0000h, MN_FSTP	;; 17c
	dw  P686 + MN_FCMOVNB, P686 + MN_FCMOVNE, P686 + MN_FCMOVNBE, P686 + MN_FCMOVNU	;; 180
	dw  0320h, P686 + MN_FUCOMI, P686 + MN_FCOMI, 0000h	;; 184
	dw  MN_FADD, MN_FMUL, MN_FCOM, MN_FCOMP	;; 188
	dw  MN_FSUB, MN_FSUBR, MN_FDIV, MN_FDIVR	;; 18c
	dw  MN_FADD, MN_FMUL, 0000h, 0000h	;; 190
	dw  MN_FSUBR, MN_FSUB, MN_FDIVR, MN_FDIV	;; 194
	dw  MN_FLD, 0000h, MN_FST, MN_FSTP	;; 198
	dw  MN_FRSTOR, 0000h, MN_FNSAVE, MN_FNSTSW	;; 19c
	dw  MN_FFREE, 0000h, MN_FST, MN_FSTP	;; 1a0
	dw  P386 + MN_FUCOM, P386 + MN_FUCOMP, 0000h, 0000h	;; 1a4
	dw  MN_FIADD, MN_FIMUL, MN_FICOM, MN_FICOMP	;; 1a8
	dw  MN_FISUB, MN_FISUBR, MN_FIDIV, MN_FIDIVR	;; 1ac
	dw  MN_FADDP, MN_FMULP, 0000h, 0328h	;; 1b0
	dw  MN_FSUBRP, MN_FSUBP, MN_FDIVRP, MN_FDIVP	;; 1b4
	dw  MN_FILD, 0000h, MN_FIST, MN_FISTP	;; 1b8
	dw  MN_FBLD, MN_FILD, MN_FBSTP, MN_FISTP	;; 1bc
	dw  0000h, 0000h, 0000h, 0000h	;; 1c0
	dw  0330h, P686 + MN_FUCOMIP, P686 + MN_FCOMIP, 0000h	;; 1c4
	dw  MN_FLD1, MN_FLDL2T, MN_FLDL2E, MN_FLDPI	;; 1c8
	dw  MN_FLDLG2, MN_FLDLN2, MN_FLDZ, 0000h	;; 1cc
	dw  MN_F2XM1, MN_FYL2X, MN_FPTAN, MN_FPATAN	;; 1d0
	dw  MN_FXTRACT, P386 + MN_FPREM1, MN_FDECSTP, MN_FINCSTP	;; 1d4
	dw  MN_FPREM, MN_FYL2XP1, MN_FSQRT, P386 + MN_FSINCOS	;; 1d8
	dw  MN_FRNDINT, MN_FSCALE, P386 + MN_FSIN, P386 + MN_FCOS	;; 1dc
;; --- The rest of these are squeezed.
	dw  0, 0138h, 0140h, P286 + MN_LAR	;; 00
	dw  P286 + MN_LSL, P286 + MN_CLTS, P486 + MN_INVD, P486 + MN_WBINVD	;; 04
	dw  P386 + MN_MOV, P386 + MN_MOV, P386 + MN_MOV, P386 + MN_MOV	;; 08
	dw  P386 + MN_MOV, P386 + MN_MOV, P586 + MN_WRMSR, P586 + MN_RDMSR	;; 0c
	dw  P686 + MN_CMOVO, P686 + MN_CMOVNO, P686 + MN_CMOVB, P686 + MN_CMOVAE	;; 10
	dw  P686 + MN_CMOVZ, P686 + MN_CMOVNZ, P686 + MN_CMOVBE, P686 + MN_CMOVA	;; 14
	dw  P686 + MN_CMOVS, P686 + MN_CMOVNS, P686 + MN_CMOVPE, P686 + MN_CMOVPO	;; 18
	dw  P686 + MN_CMOVL, P686 + MN_CMOVGE, P686 + MN_CMOVLE, P686 + MN_CMOVG	;; 1c
	dw  P586 + MN_MOVD, P586 + MN_MOVQ, P586 + MN_EMMS, P586 + MN_MOVD	;; 20
	dw  P586 + MN_MOVQ, P386 + MN_JO, P386 + MN_JNO, P386 + MN_JB	;; 24
	dw  P386 + MN_JAE, P386 + MN_JZ, P386 + MN_JNZ, P386 + MN_JBE	;; 28
	dw  P386 + MN_JA, P386 + MN_JS, P386 + MN_JNS, P386 + MN_JPE	;; 2c
	dw  P386 + MN_JPO, P386 + MN_JL, P386 + MN_JGE, P386 + MN_JLE	;; 30
	dw  P386 + MN_JG, P386 + MN_SETO, P386 + MN_SETNO, P386 + MN_SETB	;; 34
	dw  P386 + MN_SETAE, P386 + MN_SETZ, P386 + MN_SETNZ, P386 + MN_SETBE	;; 38
	dw  P386 + MN_SETA, P386 + MN_SETS, P386 + MN_SETNS, P386 + MN_SETPE	;; 3c
	dw  P386 + MN_SETPO, P386 + MN_SETL, P386 + MN_SETGE, P386 + MN_SETLE	;; 40
	dw  P386 + MN_SETG, P386 + MN_PUSH, P386 + MN_POP, P586 + MN_CPUID	;; 44
	dw  P386 + MN_BT, P386 + MN_SHLD, P386 + MN_SHLD, P386 + MN_PUSH	;; 48
	dw  P386 + MN_POP, P586 + MN_RSM, P386 + MN_BTS, P386 + MN_SHRD	;; 4c
	dw  P386 + MN_SHRD, P386 + MN_IMUL, P486 + MN_CMPXCHG, P486 + MN_CMPXCHG	;; 50
	dw  P386 + MN_LSS, P386 + MN_BTR, P386 + MN_LFS, P386 + MN_LGS	;; 54
	dw  P386 + MN_MOVZX, P386 + MN_MOVZX, 02e8h, P386 + MN_BTC	;; 58
	dw  P386 + MN_BSF, P386 + MN_BSR, P386 + MN_MOVSX, P386 + MN_MOVSX	;; 5c
	dw  P486 + MN_XADD, P486 + MN_XADD, 02f0h, P486 + MN_BSWAP	;; 60
	dw  P486 + MN_BSWAP, P486 + MN_BSWAP, P486 + MN_BSWAP, P486 + MN_BSWAP	;; 64
	dw  P486 + MN_BSWAP, P486 + MN_BSWAP, P486 + MN_BSWAP, MN_INC	;; 68
	dw  MN_DEC, P386 + MN_BT, P386 + MN_BTS, P386 + MN_BTR	;; 6c
	dw  P386 + MN_BTC, P586 + MN_CMPXCHG8B, MN_POP, MN_MOV	;; 70
	dw  MN_FNOP, MN_FCHS, MN_FABS, MN_FTST	;; 74
	dw  MN_FXAM, P386 + MN_FUCOMPP, MN_FNENI, MN_FNDISI	;; 78
	dw  MN_FNCLEX, MN_FNINIT, P286 + MN_FNSETPM, MN_FCOMPP	;; 7c
	dw  MN_FNSTSW

;; --- Disassembler: table converts unsqueezed numbers to squeezed.
;; --- 1e0-2df are extended opcodes (0f xx).

sqztab label byte
	db   1,  2,  3,  4,  0,  0,  5,  0	;; 1e0
	db   6,  7,  0,  0,  0,  0,  0,  0	;; 1e8
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 1f0
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 1f8
	db   8,  9, 10, 11, 12,  0, 13,  0	;; 200
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 208
	db  14,  0, 15,  0,  0,  0,  0,  0	;; 210
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 218
	db  16, 17, 18, 19, 20, 21, 22, 23	;; 220
	db  24, 25, 26, 27, 28, 29, 30, 31	;; 228
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 230
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 238
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 240
	db   0,  0,  0,  0,  0,  0, 32, 33	;; 248
	db   0,  0,  0,  0,  0,  0,  0, 34	;; 250
	db   0,  0,  0,  0,  0,  0, 35, 36	;; 258
	db  37, 38, 39, 40, 41, 42, 43, 44	;; 260
	db  45, 46, 47, 48, 49, 50, 51, 52	;; 268
	db  53, 54, 55, 56, 57, 58, 59, 60	;; 270
	db  61, 62, 63, 64, 65, 66, 67, 68	;; 278
	db  69, 70, 71, 72, 73, 74,  0,  0	;; 280
	db  75, 76, 77, 78, 79, 80,  0, 81	;; 288
	db  82, 83, 84, 85, 86, 87, 88, 89	;; 290
	db   0,  0, 90, 91, 92, 93, 94, 95	;; 298
	db  96, 97,  0,  0,  0,  0,  0, 98	;; 2a0
	db  99,100,101,102,103,104,105,106	;; 2a8
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 2b0
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 2b8
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 2c0
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 2c8
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 2d0
	db   0,  0,  0,  0,  0,  0,  0,  0	;; 2d8

;; --- 5 sparse groups

	db 107,108,  0,  0,  0,  0,  0,  0	;; 2e0
	db   0,  0,  0,  0,109,110,111,112	;; 2e8
	db   0,113,  0,  0,  0,  0,  0,  0	;; 2f0
	db 114,  0,  0,  0,  0,  0,  0,  0	;; 2f8
	db 115,  0,  0,  0,  0,  0,  0,  0	;; 300

;; --- 6 sparse fpu groups

SFPGROUPS equ SPARSE_BASE + ($ - sqztab)
SFPGROUP3 equ SFPGROUPS + 8*3
	db 116,  0,  0,  0,  0,  0,  0,  0	;; 308
	db 117,118,  0,  0,119,120,  0,  0	;; 310
	db   0,121,  0,  0,  0,  0,  0,  0	;; 318
	db 122,123,124,125,126,  0,  0,  0	;; 320
	db   0,127,  0,  0,  0,  0,  0,  0	;; 328
	db 128,  0,  0,  0,  0,  0,  0,  0	;; 330

;; --- Disassembler: table of mnemonics that change in the presence of a WAIT
;; --- instruction.

wtab1	dw 0322h,0321h,0320h,0323h,015dh,019eh,0324h,015fh
	dw 015eh,0330h,019fh
wtab2 label word
	dw MN_FCLEX
	dw MN_FDISI
	dw MN_FENI
	dw MN_FINIT
	dw MN_FLDCW
	dw MN_FSAVE
	dw MN_FSETPM
	dw MN_FSTCW
	dw MN_FSTENV
	dw MN_FSTSW
	dw MN_FSTSW
N_WTAB	equ ($ - wtab2)/2

;; --- Disassembler: table for operands which have a different mnemonic for
;; --- their 32 bit versions (66h prefix).

ltabo1	dw 0098h,00a7h,0099h,015ch,019ch,019eh,015eh,006dh
	dw 00cfh,00adh,00a5h,006fh,0061h,009dh,0060h,009ch
	dw 00cbh,00cah,00afh,00abh
ltabo2 label word
	dw MN_CWDE
	dw MN_CMPSD
	dw MN_CDQ
	dw MN_FLDENVD
	dw MN_FRSTORD
	dw MN_FSAVED
	dw MN_FSTENVD
	dw MN_INSD
	dw MN_IRETD
	dw MN_LODSD
	dw MN_MOVSD
	dw MN_OUTSD
	dw MN_POPAD
	dw MN_POPFD
	dw MN_PUSHAD
	dw MN_PUSHFD
	dw MN_RETFD
	dw MN_RETFD
	dw MN_SCASD
	dw MN_STOSD
N_LTABO	equ ($ - ltabo2)/2

;; --- Disassembler: table for operands which have a different mnemonic for
;; --- their 32 bit versions (67h prefix).

ltaba1	dw 00e3h,00e2h,00e1h,00e1h,00e0h,00e0h
ltaba2 label word
	dw MN_JECXZ
	dw MN_LOOPD
	dw MN_LOOPED
	dw MN_LOOPZD
	dw MN_LOOPNED
	dw MN_LOOPNZD
N_LTABA	equ ($ - ltaba2)/2

;; --- Disassembler: table of lockable instructions

locktab label word
	dw 010ah,0102h,0010h,0011h,0108h,0100h,0000h,0001h
	dw 010ch,0104h,0020h,0021h,029bh,02efh,0293h,02eeh
	dw 028bh,02edh,0290h,0291h,02e1h,0131h,02e0h,0130h
	dw 012bh,012ah,0109h,0101h,0008h,0009h,010bh,0103h
	dw 0018h,0019h,010dh,0105h,0028h,0029h,02a0h,02a1h
	dw 0086h,0087h,010eh,0106h,0030h,0031h
N_LOCK	equ ($ - locktab)/2
