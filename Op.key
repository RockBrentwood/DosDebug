## This is the file "Op.key", which says what the operand-list keys mean.
## Comments are as described in "Op.set".
## Additionally, a semi-colon allows comments in data lines.
## Keys may be one or two characters.
## v1.09:
## ―	for D and E: OpW changed to OpV.
## ―	for S8: _Db changed to _Ds.
## ―	key L isn't used anymore (was used for 32bit LOOPx).
## v1.18:
## ―	keys rearranged, they are now always 2 hex digits.
## ―	';' comments added
01 _Ax, _Ix		;; add,adc,and,or,sub, ...
02 _Ex, _Ix		;; add,adc,and,or,mov,sub, ...
03 _Ev, _Ds		;; add,adc,and,or,sub, ...
04 _Ex, _Rx		;; add,adc,and,or,mov,sub, ...
05 _Rx, _Ex		;; add,adc,and,or,mov,sub, ...
06 _Ew, _Rw		;; arpl
07 _Rv, _Mv		;; bound, LxS
08 _Rv, _Ev		;; cmovxx, bsf, bsr, imul, lar, lsl
09 _rd			;; bswap
0a _Ev, _Rv		;; bt, btr, bts, btc
0b _Ev, _Db		;; bt, btr, bts, btc
0c _Jv			;; call/jmp near, jxx
0d _Af			;; call/jmp seg:ofs
0e _Mf			;; call/jmp far [mem]
0f _Q			;; cmpxchg8b, fild, fistp
10 _Ex			;; dec, inc, imul, ...
11 _rv			;; dec, inc, pop, push
12 _Iw, _Db		;; enter
13 _MF			;; fld, fst, ...
14 _MD			;; fld, fst, ...
15 _ST, _STi		;; fdiv, fmul, fcmovxx,...
16 _STi, _ST		;; fadd, fdiv, ...
17 _ST1, _STi, _ST	;; fxxxp
18 _Md			;; fixxx
19 _Mw			;; fixxx
1a _MLD			;; fbld, fbstp
1b _STi			;; fld, fst, ...
1c _ST1, _STi		;; f[u]comx
1d _MLD			;; fld, fstp
1e _Mx			;; [l|s][g|i]dt, fsave, frstor, fldenv
1f _Aw			;; fstsw
20 _Rv, _Ev, _Ds	;; imul
21 _Xv, _Rv, _Ds	;; imul
22 _Rv, _Ev, _Iv	;; imul
23 _Xv, _Rv, _Iv	;; imul
24 _Ax, _Db		;; in al|ax|eax, imm
25 _Ax, _DX		;; in al|ax|eax, dx
26 _3			;; INT 3
27 _Db			;; INT xx, AAD xx, AAM xx
28 _Jb			;; jxx, loopxx, jmp short
29 _Ev			;; call|jmp|push [mem]
2a _Ew			;; ltr, lldt, lmsw, verr, verw, str
2b _Ev, _Rs		;; mov <reg>|[mem], <segr>
2c _Rs, _Ev		;; mov <segr>,<reg>|[mem]
2d _Ax, _Ox		;; mov al|ax|eax, [mem]
2e _Ox, _Ax		;; mov [mem], al|ax|eax
2f _rb, _Ib		;; mov <reg>, <imm>
30 _rv, _Iv		;; mov <reg>, <imm>
31 _Rv, _N, _Eb		;; movzx, movsx
32 _Rv, _N, _Ew		;; movzx, movsx
33 _Db, _Ax		;; out imm, al|ax|eax
34 _DX, _Ax		;; out dx,al|ax|eax
35 _Mv			;; pop [mem]
36 _Iv			;; push <imm>
37 _N, _Ds		;; push byte ptr <imm>
38 _Ex, _1		;; shl, shr, rol, ror, ...
39 _Ex, _CL		;; shl, shr, rol, ror, ...
3a _Ex, _Db		;; shl, shr, rol, ror, ...
3b _Iw			;; ret x, retf x
3c _Eb			;; setxx
3d _Ev, _Rv, _Db	;; shld, shrd
3e _Ev, _Rv, _CL	;; shld, shrd
3f _Av, _rv		;; xchg
40 _rv, _Av		;; xchg
## The next six must be in machine order.
41 _ES
42 _CS
43 _SS
44 _DS
45 _FS
46 _GS
47 _Xd, _CRx		;; mov <reg>, CRx
48 _CRx, _Xd		;; mov CRx, <reg>
49 _Xd, _DRx		;; mov <reg>,DRx
4a _DRx, _Xd		;; mov DRx, <reg>
4b _Xd, _TRx		;; mov <reg>,TRx
4c _TRx, _Xd		;; mov TRx,<reg>
4d _MMx, _Ed		;; movd
4e _Ed, _MMx		;; movd
4f _MMx, _Eq		;; movq
50 _Eq, _MMx		;; movq
