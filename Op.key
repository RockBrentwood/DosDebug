## This is the file "Op.key", which says what the operand-list keys mean.
## Comments are as described in "Op.set".
## Additionally, a semi-colon allows comments in data lines.
## Keys may be one or two characters.
## v1.09:
## ―	for D and E: OpW changed to OpV.
## ―	for S8: _Db changed to _Ds.
## ―	key L isn't used anymore (was used for 32bit LOOPx).
## v1.18:
## ―	keys rearranged, they are now always 2 hex digits.
## ―	';' comments added
01 OpX+_Ax, OpX+_Ix		;; add,adc,and,or,sub, ...
02 OpX+_Ex, OpX+_Ix		;; add,adc,and,or,mov,sub, ...
03 OpV+_Ex, _Ds			;; add,adc,and,or,sub, ...
04 OpX+_Ex, OpX+_Rx		;; add,adc,and,or,mov,sub, ...
05 OpX+_Rx, OpX+_Ex		;; add,adc,and,or,mov,sub, ...
06 OpW+_Ex, OpW+_Rx		;; arpl
07 OpV+_Rx, OpV+_Mx		;; bound, LxS
08 OpV+_Rx, OpV+_Ex		;; cmovxx, bsf, bsr, imul, lar, lsl
09 OpD+_rx			;; bswap
0a OpV+_Ex, OpV+_Rx		;; bt, btr, bts, btc
0b OpV+_Ex, _Db			;; bt, btr, bts, btc
0c _Jv				;; call/jmp near, jxx
0d _Af				;; call/jmp seg:ofs
0e _Mf				;; call/jmp far [mem]
0f _Q				;; cmpxchg8b, fild, fistp
10 OpX+_Ex			;; dec, inc, imul, ...
11 OpV+_rx			;; dec, inc, pop, push
12 OpW+_Ix, _Db			;; enter
13 _MF				;; fld, fst, ...
14 _MD				;; fld, fst, ...
15 _ST, _STi			;; fdiv, fmul, fcmovxx,...
16 _STi, _ST			;; fadd, fdiv, ...
17 _ST1, _STi, _ST		;; fxxxp
18 OpD+_Mx			;; fixxx
19 OpW+_Mx			;; fixxx
1a _MLD				;; fbld, fbstp
1b _STi				;; fld, fst, ...
1c _ST1, _STi			;; f[u]comx
1d _MLD				;; fld, fstp
1e _Mxx				;; [l|s][g|i]dt, fsave, frstor, fldenv
1f OpW+_Ax			;; fstsw
20 OpV+_Rx, OpV+_Ex, _Ds	;; imul
21 OpV+_Xx, OpV+_Rx, _Ds	;; imul
22 OpV+_Rx, OpV+_Ex, OpV+_Ix	;; imul
23 OpV+_Xx, OpV+_Rx, OpV+_Ix	;; imul
24 OpX+_Ax, _Db			;; in al|ax|eax, imm
25 OpX+_Ax, _DX			;; in al|ax|eax, dx
26 _3				;; int 3
27 _Db				;; int xx, aad xx, aam xx
28 _Jb				;; jxx, loopxx, jmp short
29 OpV+_Ex			;; call|jmp|push [mem]
2a OpW+_Ex			;; ltr, lldt, lmsw, verr, verw, str
2b OpV+_Ex, _Rs			;; mov <reg>|[mem], <segr>
2c _Rs, OpV+_Ex			;; mov <segr>,<reg>|[mem]
2d OpX+_Ax, OpX+_Ox		;; mov al|ax|eax, [mem]
2e OpX+_Ox, OpX+_Ax		;; mov [mem], al|ax|eax
2f OpB+_rx, OpB+_Ix		;; mov <reg>, <imm>
30 OpV+_rx, OpV+_Ix		;; mov <reg>, <imm>
31 OpV+_Rx, _N, OpB+_Ex		;; movzx, movsx
32 OpV+_Rx, _N, OpW+_Ex		;; movzx, movsx
33 _Db, OpX+_Ax			;; out imm, al|ax|eax
34 _DX, OpX+_Ax			;; out dx,al|ax|eax
35 OpV+_Mx			;; pop [mem]
36 OpV+_Ix			;; push <imm>
37 _N, _Ds			;; push byte ptr <imm>
38 OpX+_Ex, _1			;; shl, shr, rol, ror, ...
39 OpX+_Ex, _CL			;; shl, shr, rol, ror, ...
3a OpX+_Ex, _Db			;; shl, shr, rol, ror, ...
3b OpW+_Ix			;; ret x, retf x
3c OpB+_Ex			;; setxx
3d OpV+_Ex, OpV+_Rx, _Db	;; shld, shrd
3e OpV+_Ex, OpV+_Rx, _CL	;; shld, shrd
3f OpV+_Ax, OpV+_rx		;; xchg
40 OpV+_rx, OpV+_Ax		;; xchg
## The next six must be in machine order.
41 _ES
42 _CS
43 _SS
44 _DS
45 _FS
46 _GS
47 OpD+_Xx, _CRx		;; mov <reg>, CRx
48 _CRx, OpD+_Xx		;; mov CRx, <reg>
49 OpD+_Xx, _DRx		;; mov <reg>,DRx
4a _DRx, OpD+_Xx		;; mov DRx, <reg>
4b OpD+_Xx, _TRx		;; mov <reg>,TRx
4c _TRx, OpD+_Xx		;; mov TRx,<reg>
4d _MMx, OpD+_Ex		;; movd
4e OpD+_Ex, _MMx		;; movd
4f _MMx, OpQ+_Ex		;; movq
50 OpQ+_Ex, _MMx		;; movq
